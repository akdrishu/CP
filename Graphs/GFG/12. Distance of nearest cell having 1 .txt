//https://practice.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1-1587115620/1/?track=DSASP-Graph&batchId=154


vector<vector<int>>nearest(vector<vector<int>>grid){
        vector<vector<int>> a(grid.size(),vector<int>(grid[0].size(),INT_MAX));
        int n=grid.size(),m = grid[0].size();
        queue<pair<int,int>> temp;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    a[i][j]=0;
                    temp.push({i,j});
                }
            }
        }
        vector<pair<int,int>> dir{{0,-1},{0,1},{1,0},{-1,0}};
        while(!temp.empty()){
            pair<int,int> ver= temp.front();
            temp.pop();
            int x,y;
            for(int i=0;i<4;i++){
                x=ver.first+dir[i].first;
                y=ver.second+dir[i].second;
                if(x>=0 && y>=0 && x<n &&y<m && a[x][y] > a[ver.first][ver.second]+1 ){
                    a[x][y] = a[ver.first][ver.second]+1;
                   temp.push({x,y});
                }
            }
        }
        return a;
    
}