//https://practice.geeksforgeeks.org/problems/length-of-largest-region-of-1s-1587115620/0/?track=DSASP-Graph&batchId=154#

int findMaxArea(vector<vector<int>>& grid) {
    int n=grid.size(),m=grid[0].size();
    vector<vector<bool>> vis(n,vector<bool>(m,false));
    vector<pair<int,int>> dir{{0,1},{0,-1},{1,0},{-1,0},{-1,1},{-1,-1},{1,-1},{1,1}};
    int ans=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(!vis[i][j] && grid[i][j]==1){
                int count=0;
                queue<pair<int,int>> temp;
                temp.push({i,j});
                vis[i][j]=true;
                while(!temp.empty()){
                    pair<int,int> ver = temp.front();
                    temp.pop();
                    count++;
                    for(auto &x: dir){
                        int a=ver.first+x.first;
                        int b=ver.second+x.second;
                        if(a>=0 && a<n && b>=0 && b<m && grid[a][b]==1&& !vis[a][b]){
                            temp.push({a,b});
                            vis[a][b]=true;
                        }
                    }
                }
                ans=max(ans,count);
            }
        }
    }
    return ans;
}